//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: ExN05EMShowerModel.hh,v 1.8 2003/06/16 16:49:59 gunter Exp $
// GEANT4 tag $Name: geant4-07-00-patch-01 $
//
//
//----------------------------------------------
// Parameterisation of e+/e-/gamma producing hits
// The hits are the same as defined in the detailed
// simulation.
//----------------------------------------------
#ifndef KM3EMShowerModel_h
#define KM3EMShowerModel_h 1

#include "math.h"
#include "G4VFastSimulationModel.hh"
#include "G4Step.hh"
#include "G4TouchableHandle.hh"
#include "G4OpticalPhoton.hh"
#include "G4ThreeVector.hh"
#include "G4Material.hh"
#include "G4MaterialPropertiesTable.hh"
#include "KM3Detector.hh"
#include <vector>

class KM3EMShowerModel : public G4VFastSimulationModel {
public:
  //-------------------------
  // Constructor, destructor
  //-------------------------
  KM3EMShowerModel(G4String, G4Region *);
  KM3EMShowerModel(G4String);
  ~KM3EMShowerModel();

  //------------------------------
  // Virtual methods of the base
  // class to be coded by the user
  //------------------------------

  // -- IsApplicable
  G4bool IsApplicable(const G4ParticleDefinition &);
  // -- ModelTrigger
  G4bool ModelTrigger(const G4FastTrack &);
  // -- User method DoIt
  void DoIt(const G4FastTrack &, G4FastStep &);
  //  void SetDetector(KM3Detector*);
  KM3Detector *myStDetector;

private:
  G4ThreeVector gdrot(G4ThreeVector, G4ThreeVector);
  void LO_CAS(G4ThreeVector, G4ThreeVector, G4double, G4double, G4FastStep &);
  void CreatePhotonsPerPMT(G4ThreeVector, G4ThreeVector, G4double, G4double,
                           G4FastStep &);
  G4double DACAS(G4double, G4double, G4double);
  G4double mylum(G4double);
  G4double halum(G4double);
  G4double gammp(G4double, G4double);
  G4double GamCf(G4double, G4double);
  G4double GamSer(G4double, G4double);
  G4double LnGamma(G4double);

private:
  G4double Pmin, Pmax, dp;
  G4double ThetaC;

  G4double max_erad, max_hrad;

  G4double emirad, hadirad;

  G4double constALL, constEM, constHAD, constEM1, constHAD1;

  G4double small, radtodeg, radtodeg1;
  G4double cemlum[9];
  G4double chalum[9];

  G4double dacuts11, dacuts12;
  G4double emsimen, hasimen;
  G4double ema1, ema2, emb, haa1, haa2, hab;
  G4double minea, minha, gmp_step;
  G4double DACASconst1, DACASconst2;
  G4double parametrizationDownThreshold;
  G4MaterialPropertyVector *Rindex;
  G4MaterialPropertyVector *AbsLength;
  G4int ctyp; // 1 for em and 2 for had
  G4int PhotonsSurviving;
  G4int MaxNumberOfPhotonsSurviving; // is the maximum number of photons created
                                     // to a super benthos
};
#endif
